// new plugins syntax
plugins {
    // code
    id "java"
    // spring
    id "io.spring.dependency-management" version "1.0.3.RELEASE"
    id 'org.springframework.boot' version '1.5.4.RELEASE'
    // code quality
    id "jacoco"
    id "org.owasp.dependencycheck" version "2.1.0"
    // IDEs
    id "eclipse"
    id "idea"
    // publishing
    id "com.cinnober.gradle.semver-git" version "2.2.2"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// dependencies section
repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}
// Spring related configs
ext {
    springCloudVersion = 'Dalston.SR2'
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

/*
Forces dependencies' cache invalidation for each build for dependencies marked with
    { changing = true }
    e.g.
    compile('com.github.symbiote-h2020:SymbIoTeSecurity:develop-SNAPSHOT'){ changing = true }
 */
configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    /* SymbIoTeSecurity manual:
        One can use the library from jitpack by default with the notation:
            compile('com.github.symbiote-h2020:SymbIoTeSecurity:develop-SNAPSHOT') {changing = true }
        or having cloned locally the SymbIoTeLibraries repo use it directly with project dependency by:
            compile project(':SymbIoTeSecurity')
        Important --- In order to use the latter you need to:
            1) switch comments on the artifact and project dependencies
            2) always have only one uncommented
            3) project dependency requires changes in settings.gradle file in this project
            4) never commit build.gradle which has project dependencies active as it will break CI builds
    */
    compile('com.github.symbiote-h2020:SymbIoTeSecurity:14.+'){ changing = true }
    //compile project(':SymbIoTeSecurity')

    // Spring
    compile('org.springframework.cloud:spring-cloud-starter')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('org.springframework.cloud:spring-cloud-starter-zipkin')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')

    // tests only
    testCompile('junit:junit:4.+')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile ('com.github.fakemongo:fongo:2.1+')
}

// code quality below
task generateJavaDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadocs")
}

// jacoco configuration section
jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// owasp config
dependencyCheck {
    outputDirectory = "build/reports/security"
}

// including code quality extensions into the build
check.dependsOn(jacocoTestReport)//, 'dependencyCheckAnalyze')