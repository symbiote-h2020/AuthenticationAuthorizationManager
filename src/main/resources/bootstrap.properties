# REQUIRED SETTINGS:
#in case of standalone AAM, cloud config should not be enabled
spring.cloud.config.enabled=true
spring.application.name=TODO
logging.file=logs/AuthenticationAuthorizationManager.log
# AAM settings
aam.deployment.owner.username=TODO
aam.deployment.owner.password=TODO
# name of the PAAM JavaKeyStore file you need to put in your src/main/resources directory
aam.security.KEY_STORE_FILE_NAME=TODO.p12
# name of the root ca certificate entry in the Keystore you produced using the SymbIoTeSecurity Factory
aam.security.ROOT_CA_CERTIFICATE_ALIAS=TODO
# name of the certificate entry in the Keystore you produced using the SymbIoTeSecurity Factory
aam.security.CERTIFICATE_ALIAS=TODO
# symbiote keystore password
aam.security.KEY_STORE_PASSWORD=TODO
# symbiote certificate private key password
aam.security.PV_KEY_PASSWORD=TODO
#JWT validity time in milliseconds - how long the tokens issued to your users (apps) are valid... think maybe of an hour, day, week?
aam.deployment.token.validityMillis=TODO
# allowing offline validation of foreign tokens by signature trust-chain only. Useful when foreign tokens are expected to be used along with no internet access
aam.deployment.validation.allow-offline=TODO
# HTTPS only
# name of the keystore containing the letsencrypt (or other) certificate and key pair for your AAM host's SSL, you need to put it also in your src/main/resources directory
server.ssl.key-store=classpath:TODO.p12
# SSL keystore password
server.ssl.key-store-password=TODO
# SSL certificate private key password
server.ssl.key-password=TODO
# http to https redirect
security.require-ssl=true
# FOLLOWING SETTINGS CAN BE FOUND IN CoreConfigProperties OR CloudConfigProperties DEPENDING ON KIND OF AAM (CORE, PLATFORM) AND THEY ARE DOWNLOADED AUTOMATICALLY.
# THEY SHOULD BE USED ONLY IN CASE OF STANDALONE AAMS. ALL THE FIELDS MARKED AS REQUIRED SHOULD BE UNCOMMENTED AND FILLED.
# OPTIONAL
# (DEFAULT: true)
#eureka.client.enabled=TODO
#spring.zipkin.enabled=TODO
# Cache settings. If validated token is in cache, component certificate or available AAMs were aquired recently, value from cache is returned to avoid communication with another AAM. In case of missing, default values are used.
# time (in milliseconds) for which valid token should be cached (DEFAULT: 60000)
#aam.cache.validToken.expireMillis=TODO
# size of validToken cache. If size set to -1, validToken cache has no limit. (DEFAULT: 1000)
#aam.cache.validToken.size=TODO
# time (in seconds) for which componentCertificate should be cached (DEFAULT: 60)
#aam.cache.componentCertificate.expireSeconds=TODO
# time (in seconds) for which availableAAMs should be cached (DEFAULT: 60)
#aam.cache.availableAAMs.expireSeconds=TODO
#server.port=TODO
# Springfox documentation path
#springfox.documentation.swagger.v2.path=TODO
# REQUIRED BY ALL AMMS:
# needed to offer available aams service
#symbIoTe.core.interface.url=TODO
# needed to expose oneself to other components
#symbIoTe.localaam.url=TODO
# amqp settings
#rabbit.host=TODO
#rabbit.username=TODO
#rabbit.password=TODO
#rabbit.exchange.aam.name=TODO
#rabbit.exchange.aam.type=TODO
#rabbit.exchange.aam.durable=TODO
#rabbit.exchange.aam.autodelete=TODO
#rabbit.exchange.aam.internal=TODO
# amqp queues for basic functionalities
#rabbit.queue.validate.request=TODO
#rabbit.queue.get.user.details=TODO
#rabbit.queue.manage.user.request=TODO
#rabbit.queue.manage.revocation.request=TODO
#rabbit.queue.manage.attributes=TODO
# amqp routing keys for basic functionalities
#rabbit.routingKey.validate.request=TODO
#rabbit.routingKey.get.user.details=TODO
#rabbit.routingKey.manage.user.request=TODO
#rabbit.routingKey.manage.revocation.request=TODO
#rabbit.routingKey.manage.attributes=TODO
# aams database name
#aam.database.name=TODO
# REQUIRED BY CORE
#aam.environment.platformAAMSuffixAtInterWorkingInterface=TODO
#aam.environment.interworkingInterfacePort=TODO
# amqp queues required for core AAM functionalities
#rabbit.queue.get.platform.owners.names=TODO
#rabbit.queue.ownedplatformdetails.request=TODO
#rabbit.queue.manage.platform.request=TODO
# amqp routing keys required for core AAM functionalities
#rabbit.routingKey.get.platform.owners.names=TODO
#rabbit.routingKey.ownedplatformdetails.request=TODO
#rabbit.routingKey.manage.platform.request=TODO
# profile activating core AAM functionalities
#spring.profiles.active=core
# REQUIRED BY PLATFORM
#aam.environment.coreInterfaceAddress=TODO
#rabbit.routingKey.federation.created=TODO
#rabbit.routingKey.federation.changed=TODO
#rabbit.routingKey.federation.deleted=TODO
#rabbit.exchange.federation=TODO
#spring.profiles.active=platform
